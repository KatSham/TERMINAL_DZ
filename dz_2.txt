JSON
 1. Создать внешний репозиторий c названием JSON. 
      В GitHub на главной странице нажимаем
  Create a new repository или New, заполняем необходимые строки: Repository JSON, Public, кнопка Create repository
 2. Клонировать репозиторий JSON на локальный компьютер. 
      Заходим в репозиторий JSON,
    копируем ссылку HTTPS https://github.com/KatSham/JSON.git . В компьютере на диске С создаем папку GitBush,
    в терминале находим путь к ней, далее команда git clone и скопированная ссылка. Результате появилась папка
    JSON (main) репозитория.
 3. Внутри локального JSON создать файл “new.json”. 
      Заходим в главную ветку main, cat> new.json
 4. Добавить файл под гит. 
      Команда git status, git add new.json 
 5. Закоммитить файл. 
      Команда git commit -m "new"
 6. Отправить файл на внешний GitHub репозиторий. 
      Команда git push 
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
     vim new.json, I-режим редоктирования  или 
{
           "about me":[      
		 "name": "Kate",
		 "surmane": "Shametska",
		 "father_name": "Sergeevna",
		 "age": "33",
		 "number_of_pets": "1",
		 "future_desired_salary": "500_USD" 
	   ]
     }
 8. Отправить изменения на внешний репозиторий. git commit -a -m "name", git push
 9. Создать файл preferences.json 
	Команда cat >preferences.json
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
   {
      "my prefernce": {
                 "favorite_movie": "Girls",
		 "favorite_series": "Friends",
		 "favorite_dish": "Pizza",
		 "favorite_season": "Summer",
		 "country_you_would_like_to_visit": "USA"

      }

    }
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON. 
   Команда cat > skills.json, git status
 12. Отправить сразу 2 файла на внешний репозиторий.
     Команда git add preferences.json, git add skills.json , git commit -m preferences.json "new", git commit -m skills.json "new" , git push.
 13. На веб интерфейсе создать файл bug_report.json.
     В нужном нам репозитории создаем файл нажимаем кнопку ADD file-create далее New file
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     Нажимаем Commit changes
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
     Нажимаем кнопку Edit this fail. Вносим пример bag_report в формате Json 
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     Нажимаем кнопку Commit changes
 17. Синхронизировать внешний и локальный репозиторий JSON
     Команда git pull 

XML
 21. Создать внешний репозиторий c названием XML.
     В GitHub на главной странице нажимаем
  Create a new repository или New, заполняем необходимые строки: Repository XML, Public, кнопка Create repository
 22. Клонировать репозиторий XML на локальный компьютер.
     Заходим в репозиторий XML,
    копируем ссылку HTTPS https://github.com/KatSham/XML.git . В компьютере входим в папку GitBush,
    в терминале находим путь к ней, далее команда git clone и скопированная ссылка. Результате появилась папка
    XML (main) репозитория.
 23. Внутри локального XML создать файл “new.xml”.
     Заходим в главную ветку main, cat> new.xml
 24. Добавить файл под гит.
     Команда git status, git add new.xml 
 25. Закоммитить файл.
	Команда git commit -m "new"
 26. Отправить файл на внешний GitHub репозиторий.
	Команда git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
	<about_me>
  		<name>Kate</name>
  		<surname>Shametska</surname>
  		<father_name>Sergeevna</father_name>
  		<age>33</age>
  		<number_of_pets>1</number_of_pets>
  		<future_desired_salary>500_USD</future_desired_salary>
	</about_me>
 28. Отправить изменения на внешний репозиторий.
	git commit -a -m "nnn", git push
 29. Создать файл preferences.xml
	Команда cat >preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
	Добавляем информацию
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
	Команда cat > skills.xml, Добавляем информацию, git status
 32. Сделать коммит в одну строку.
	git add ., git commit -m "tru"
 33. Отправить сразу 2 файла на внешний репозиторий.
	git push
 34. На веб интерфейсе создать файл bug_report.xml.
	В нужном нам репозитории создаем файл нажимаем кнопку ADD file-create далее New file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Нажимаем Commit changes
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
	Нажимаем кнопку Edit this fail. Вносим пример bag_report в формате XML 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Нажимаем кнопку Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML
	Команда git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
	 В GitHub на главной странице нажимаем
  Create a new repository или New, заполняем необходимые строки: Repository TXT, Public, кнопка Create repository
 2. Клонировать репозиторий TXT на локальный компьютер.
	Заходим в репозиторий TXT,
    копируем ссылку HTTPS https://github.com/KatSham/TXT.git . В компьютере входим в папку GitBush,
    в терминале находим путь к ней, далее команда git clone и скопированная ссылка. Результате появилась папка
    TXT (main) репозитория.
 3. Внутри локального TXT создать файл “new.txt”.
	Заходим в главную ветку main, cat> new.txt
 4. Добавить файл под гит.
	Команда git status, git add new.txt
 5. Закоммитить файл.
	Команда git commit -m "new"
 6. Отправить файл на внешний GitHub репозиторий.
	Команда git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
	В терминале открываем notepad new.txt, вносим изменения.
 8. Отправить изменения на внешний репозиторий.
	git commit -a -m "tru", git push
 9. Создать файл preferences.txt
	Команда cat >preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
	notepad preferences.txt, вносим информацию.
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
	Команда cat > skills.txt, Добавляем информацию, git status
 12. Сделать коммит в одну строку.
	git add ., git commit -m "tru"
 13. Отправить сразу 2 файла на внешний репозиторий.
	git push
 14. На веб интерфейсе создать файл bug_report.txt.
	В нужном нам репозитории создаем файл нажимаем кнопку ADD file-create далее New file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Нажимаем Commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
	Нажимаем кнопку Edit this fail. Вносим пример bag_report в формате XML 
 18. Синхронизировать внешний и локальный репозиторий TXT
	Команда git pull